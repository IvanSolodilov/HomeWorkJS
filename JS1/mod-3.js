//Напишите функцию hello1(), которая при вызове будет возвращать строку «Привет, JavaScript!».

function hello1() {
  return "Привет, JavaScript!";
}
console.log(hello1());

//Напишите функцию hello2(), которая при вызове будет принимать переменную name (например, «Василий») и выводить строку (в нашем случае «Привет, Василий»).  В случае отсутствующего аргумента выводить «Привет, гость»

const hello2 = function (name = "Гость") {
  console.log(`Привет, ${name}`);
  return;
};

console.log(hello2("Вася"));
console.log(hello2());

//Напишите функцию mul(n,m), которая принимает два аргумента и возвращает произведение этих аргументов. Проверьте ее работу.

function mul(n, m) {
  return n * m;
}
console.log(mul(5, 6));

//Создайте функцию repeat(str, n), которая возвращает строку, состоящую и n повторений строки str. n — по умолчанию 2, str — пустая строка

function repeat(str = "", n = 2) {
  return str.repeat(n);
}

console.log(repeat("Привет\n", 5));

//Создайте функцию rgb(), которая будет принимать три числовых аргумента и возвращать строку вида «rgb(23,100,134)». Если аргументы не заданы, считать их равными нулю. Не проверять переменные на тип данных

function rgb(a = 0, b = 0, c = 0) {
  return `rgb(${a},${b},${c})`;
}
console.log(rgb(10, 200, 300));
console.log(rgb());

//Создайте функцию avg() , которая будет находить среднее значение по всем своим аргументам (аргументы величины числовые).

function avg(...arr) {
  len = arr.length;
  summa = 0;
  for (i = 0; i < len; i++) {
    summa += arr[i];
  }
  return summa / len;
}

console.log(avg(100, 200, 300));

//Создайте функцию m(a,b) оболочку для mul(). m() должна принимать два аргумента а возвращать результат работы mul() с этими двумя аргументами После выполнения задания поэкспериментируйте, создайте функцию log(), которая будет принимать одно значение, а вызывать  console.log() с этим значением.

function m(a, b) {
  function mul() {
    return a + b;
  }
  return mul;
}

const log = m(15, 45);
console.log(log());

//(*) Напишите функцию operation(m,n,o), в которой m и n — числовые переменные, а o — функциональный литерал, который берет два аргумента и выполняет математическую операцию над ними (например, функция mul() из задания 4.)

const operation = (m, n, o) => m + n;

console.log(operation(10, 20)); // переменная о будет выводить сумму m+n

//(*) Напишите функцию addN(n), которая вернёт другую функцию.
// Возвращенная функция должна складывать получаемый аргумент с аргументом n возвращающей функции.
// Внимание, эта простая на реализацию замыкания.

// решение представляю в 2 стилях

function addN(n) {
  return (m) => n + m; // стрелочный стиль
}
const foo = addN(10);
console.log(`Стрелочная фунция вернет: ${foo(5)}`);

function addN(n) {
  return function (m) {
    // декларативный стиль
    return n + m;
  };
}
const foo2 = addN(15);
console.log(`Декларативная функция вернет ${foo2(10)}`);

//(*) Напишите функцию words(),  которая в зависимости от переданного в нее
//целочисленного аргумента n, будет выводить
//слово «товар» в нужно форме («12 товаров», но «22 товара»).
//По умолчанию аргумент d должен иметь значение 0

function words(n = 0) {
let goods = "";
if (n % 10 == 1 && n % 100 != 11) {
  goods = "товар";
} else if (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) {
  goods = "товара";
} else {
  goods = "товаров";
}

return n + " " + goods;
}

for (let i = 0; i <= 30; i++) {
  console.log(words(i));
}